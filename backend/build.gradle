plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'checkstyle'
	id 'jacoco'
}


group = 'com.commigo.metaclass'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven {
		url 'https://dl.bintray.com/bordertech/buildtools'
	}
}


checkstyle {
	// Configura le regole Checkstyle (puoi personalizzarle secondo le tue esigenze)
	toolVersion = "8.48"
	sourceSets = [sourceSets.main]
	configFile = rootProject.file("config/checkstyle/google_checks.xml")
	showViolations = true
	ignoreFailures = false
}


configurations {
	badger
}


task generateBadges {
	dependsOn 'checkstyleMain'
	doLast {
		ant {
			taskdef(name: 'badger', classname: 'com.github.bordertech.buildtools', classpath: configurations.badger.asPath)
			badger(skip: project.hasProperty('badges.skip') ? project.badges.skip : false,
					outputDir: 'target/site/badges',
					inputFile: 'target/checkstyle-result.xml')
		}
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java:8.0.28'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'org.projectlombok:lombok:1.18.30'
	implementation 'com.google.code.gson:gson:2.8.9'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
	implementation 'com.auth0:java-jwt:3.18.1'
	implementation 'org.pmml4s:pmml4s_2.12:0.9.12'
	implementation 'org.jpmml:pmml-evaluator:1.5.6'
	implementation 'org.jpmml:pmml-evaluator-extension:1.5.6'
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'com.twosigma.beakerx:beakerx-kernel:2.0.0' // Sostituisci con l'ultima versione disponibile


	checkstyle 'com.puppycrawl.tools:checkstyle:10.9.1'
	badger 'com.github.bordertech.buildtools:badger:1.0.0'


	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
	implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'

	implementation 'org.apache.commons:commons-csv:1.8'
	testImplementation 'junit:junit:4.13.2'
	testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.1'
	testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
	testImplementation 'org.mockito:mockito-core:3.12.4'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	implementation 'org.hibernate:hibernate-validator:7.0.2.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

processResources {
	filesMatching('**/application.properties') {
		expand(project.properties)
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
